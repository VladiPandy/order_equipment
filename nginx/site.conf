server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  _;

    # Добавляем заголовки безопасности
    add_header 'Access-Control-Allow-Origin' $http_origin always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    add_header 'Cross-Origin-Opener-Policy' 'same-origin' always;
    add_header 'Cross-Origin-Embedder-Policy' 'require-corp' always;
    add_header 'Cross-Origin-Resource-Policy' 'same-origin' always;

    location = /auth {
        internal;
	if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Origin' $http_origin always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
        }

        # Для POST-запросов
        if ($request_method = 'POST') {
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Origin' $http_origin always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        # Для GET-запросов
        if ($request_method = 'GET') {
		add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Origin' $http_origin always;
		#add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                #add_header 'Content-Length' 0 always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        proxy_pass http://api_app:8000/api/v1/auth/auth_check;
        #proxy_redirect off;
        #proxy_pass_request_body off;
    }

    # Прокси для API
    location  /api {
	 	if ($request_method = 'OPTIONS') {
        	add_header 'Access-Control-Allow-Origin' $http_origin always;
		add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        	add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Max-Age' 1728000 always;
        	add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        	add_header 'Content-Length' 0 always;
        	return 204;
    	}

    	# Для POST-запросов
    	if ($request_method = 'POST') {
		add_header 'Access-Control-Allow-Origin' $http_origin always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        	add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        	add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    	}

    	# Для GET-запросов
    	if ($request_method = 'GET') {
		add_header 'Access-Control-Allow-Origin' $http_origin always;
		#add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        	#add_header 'Content-Length' 0 always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        	add_header 'Access-Control-Allow-Headers' 'mode ,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        	add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    	}
	auth_request /auth;
        error_page 401 = @error401;

        proxy_pass http://api_app:8000;
        #proxy_redirect off;
    }

    # Прокси для админ-панели
    location /admin/ {
        proxy_pass http://admin_app:8000;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header Host $host;
        #proxy_redirect off;
    }

    # Прокси для страницы логина
    location /login/ {
        proxy_pass http://admin_app:8000;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header Host $host;
        #proxy_redirect off;
    }


    # React-приложения
    location / {

        auth_request /auth;
        error_page 401 = @error401;

        proxy_pass http://react_app:5173;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header Host $host;
        #proxy_redirect off;
    }

    # Блок для обработки 401 ошибки
    location @error401 {
        return 302 http://$host/login/;
    }

    # Обслуживание статических файлов
    location /static/ {
        alias /app/staticfiles/;
    }

    error_page   404              /404.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
