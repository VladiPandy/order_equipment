# Generated by Django 4.2.5 on 2025-06-06 13:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adminstrator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('admin_nick', models.CharField(max_length=255, unique=True, verbose_name='Логин для авторизации')),
                ('admin_person', models.CharField(max_length=255, verbose_name='Данные ответственного')),
                ('admin_password', models.CharField(max_length=128, verbose_name='Пароль для входа')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
                'db_table': 'public"."adminstrator',
            },
        ),
        migrations.CreateModel(
            name='AnalyzeType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(max_length=255, verbose_name='Тип анализа')),
            ],
            options={
                'verbose_name': 'Тип анализа',
                'verbose_name_plural': 'Типы анализа',
                'db_table': 'public"."analyze_type',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Название прибора')),
                ('status', models.CharField(choices=[('active', 'Активное'), ('inactive', 'Неактивное'), ('maintenance', 'Техническое обслуживание')], max_length=50, verbose_name='Статус работы')),
                ('count_samples', models.IntegerField(default=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Суточный лимит прибора')),
            ],
            options={
                'verbose_name': 'Прибор',
                'verbose_name_plural': 'Приборы',
                'db_table': 'public"."equipment',
            },
        ),
        migrations.CreateModel(
            name='Executor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
                'db_table': 'public"."executor',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('project_nick', models.CharField(max_length=255, unique=True, verbose_name='Логин для авторизации')),
                ('project_name', models.CharField(max_length=255, unique=True, verbose_name='Проект')),
                ('is_priority', models.BooleanField(verbose_name='Имеет приоритет')),
                ('responsible_person', models.CharField(max_length=255, verbose_name='Руководитель проекта')),
                ('project_password', models.CharField(max_length=128, verbose_name='Пароль для входа')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'db_table': 'public"."project',
            },
        ),
        migrations.CreateModel(
            name='Analyze',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('analyze_name', models.CharField(max_length=255, verbose_name='Название анализа')),
                ('analyze_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyze_type', to='basic_elements.analyzetype', verbose_name='Тип анализа')),
            ],
            options={
                'verbose_name': 'Анализ',
                'verbose_name_plural': 'Анализы',
                'db_table': 'public"."analyze',
            },
        ),
    ]
