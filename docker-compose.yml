services:
  db:
    build:
      context: ./db
    command: ["postgres", "-p", "${DB_PORT}", "-c", "shared_preload_libraries=pg_cron", "-c", "cron.database_name=${DB_NAME}"]
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./db/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./db/backups:/var/lib/postgresql/backups
      - ./db/backup.sh:/var/lib/postgresql/backup.sh
      - ./db/init_backup.sql:/docker-entrypoint-initdb.d/init_backup.sql
      - ./db/restore.sh:/docker-entrypoint-initdb.d/restore.sh

  admin_app:
    build:
      context: ./app
      dockerfile: Dockerfile_2
    expose:
      - 8000
    env_file:
      - ./.env
    volumes:
      - web-static:/app/staticfiles
    depends_on:
      - db

  api_app:
    build:
      context: ./app
      dockerfile: Dockerfile_1
    expose:
      - 8000
    env_file:
      - ./.env
    volumes:
      - web-static:/app/staticfiles
      - ./app/logs/:/app/logs/
    depends_on:
      - db

  react_app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ./.env
    volumes:
      - web-static:/app/build
    depends_on:
      - api_app

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    volumes:
      - web-static:/app/staticfiles
    depends_on:
      - api_app
      - admin_app
      - react_app

volumes:
  web-static: